version: '2'
services:
    postgres:
      image: postgres:9.5
      restart: always
      ports:
        - "127.0.0.1:${POSTGRES_PUBLIC_PORT}:5432"
      environment:
        - "POSTGRES_USER=${POSTGRES_USER}"
        - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
        - "POSTGRES_DB=gogs"
      volumes:
        - "db-data:/var/lib/postgresql/data"
      networks:
        - gogs
    gogs:
      image: gogs/gogs:latest
      restart: always
      ports:
        - "127.0.0.1:${SSH_PUBLIC_PORT}:22"
        - "127.0.0.1:${WEB_PUBLIC_PORT}:3000"
      links:
        - postgres
      networks:
        - gogs
      volumes:
        - "/home/git/gogs:/data"
      depends_on:
        - postgres

    drone-server:
      image: drone/drone:0.8

      ports:
        - 3031:8000
        - 9000
      volumes:
        - /var/lib/drone:/var/lib/drone/
      restart: always
      depends_on:
        - gogs
      environment:
        - DRONE_OPEN=true
        - DRONE_HOST=${DRONE_HOST}
        - DRONE_GOGS=true
        - DRONE_GOGS_URL=http://gogs.mycompany.com
        - DRONE_SECRET=${DRONE_SECRET}

    drone-agent:
      image: drone/agent:0.8

      restart: always
      depends_on:
        - drone-server
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      environment:
        - DRONE_SERVER=drone-server:9000
        - DRONE_SECRET=${DRONE_SECRET}

networks:
    gogs:
      driver: bridge

volumes:
    db-data:
      driver: local

